# -*- coding: utf-8 -*-
"""bd2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1FSmEcGdcrKUm-OO0hyDdcHUjvdKBam59
"""

import matplotlib.pyplot as plt
import numpy as np
import pandas as pd
import io

#df = pd.read_csv(io.StringIO(uploaded['california_housing_train.csv'].decode('utf-8')))

#dataframe = pd.read_csv(dataset_url)

df1000 = pd.read_csv('https://raw.githubusercontent.com/hawkilol/DBlocks/master/timesCSV/1000.csv')

df10000 = pd.read_csv('https://raw.githubusercontent.com/hawkilol/DBlocks/master/timesCSV/10000.csv')

df100000= pd.read_csv('https://raw.githubusercontent.com/hawkilol/DBlocks/master/timesCSV/100000.csv')


dfAll= pd.read_csv('https://raw.githubusercontent.com/hawkilol/DBlocks/master/timesCSV/timesAll.csv', index_col=0)

df1000

df10000

df100000

dfAll

# %matplotlib inline
# plt.xlabel("Execuções")
# plt.ylabel("Tempos")
# plt.plot(x)

# #plt.plot(y, y2)
# plt.show()

# Commented out IPython magic to ensure Python compatibility.
# %matplotlib inline
plt.figure(figsize=(8, 6), dpi=80)
plt.xlabel("N transações")

plt.ylabel("Times")

plt.plot(dfAll.Exp1, label='Exp1')
plt.plot(dfAll.Exp2, label='Exp2')
plt.plot(dfAll.Exp3, label='Exp3')
plt.plot(dfAll.Exp4, label='Exp4')

#plt.xticks([1,2,3,4,5,6,7,8,9,10])
plt.legend()
plt.show()

# %matplotlib inline
plt.figure(figsize=(8, 6), dpi=80)
plt.xlabel("N transações")

plt.ylabel("Times")

plt.plot(dfAll.Exp1, label='Exp1')
plt.plot(dfAll.Exp2, label='Exp2')
plt.plot(dfAll.Exp3, label='Exp3')
plt.plot(dfAll.Exp4, label='Exp4')
plt.yscale('log', basey=2)
plt.xscale('log', basex=1.5)
#plt.xticks([1,2,3,4,5,6,7,8,9,10])
plt.legend()
plt.show()

# %matplotlib inline
plt.figure(figsize=(8, 6), dpi=80)
plt.xlabel("N transações")

plt.ylabel("Times")

plt.plot(dfAll.Exp1, label='Exp1')
plt.plot(dfAll.Exp2, label='Exp2')
plt.plot(dfAll.Exp3, label='Exp3')
plt.plot(dfAll.Exp4, label='Exp4')
plt.yscale('log', basey=2)
#plt.xscale('log', basex=1.5)
#plt.xticks([1,2,3,4,5,6,7,8,9,10])
plt.legend()
plt.show()

# %matplotlib inline
plt.figure(figsize=(8, 6), dpi=80)
plt.xlabel("N transações")

plt.ylabel("Times")

plt.plot(dfAll.Exp1, label='Exp1')
plt.plot(dfAll.Exp2, label='Exp2')
plt.plot(dfAll.Exp3, label='Exp3')
plt.plot(dfAll.Exp4, label='Exp4')
#plt.yscale('log', basey=2)
plt.xscale('log')
#plt.xticks([1,2,3,4,5,6,7,8,9,10])
plt.legend()
plt.show()

print("TEST")
# %matplotlib inline
plt.figure(figsize=(8, 6), dpi=80)
plt.xlabel("N transações")

plt.ylabel("Times")

plt.plot(dfAll.Exp1, label='Exp1')
plt.plot(dfAll.Exp2, label='Exp2')
plt.plot(dfAll.Exp3, label='Exp3')
plt.plot(dfAll.Exp4, label='Exp4')
plt.yscale('log', basey=10)
#plt.xscale('linear')
#plt.xticks([1,2,3,4,5,6,7,8,9,10])
plt.legend()
plt.show()



# Commented out IPython magic to ensure Python compatibility.
# %matplotlib inline
plt.scatter(dfAll.Exp1, dfAll.Exp2, dfAll.Exp3, dfAll.Exp4)

plt.show()

# %matplotlib inline
plt.xlabel("N transações")

plt.ylabel("Times")

plt.plot(dfAll.Exp1, label='Exp1')
plt.plot(dfAll.Exp2, label='Exp2')
plt.plot(dfAll.Exp3, label='Exp3')
plt.plot(dfAll.Exp4, label='Exp4')
plt.yscale('log', basey=2)
#plt.xscale('log', basex=1.5)
#plt.xticks([1,2,3,4,5,6,7,8,9,10])
plt.legend()
plt.show()

# Commented out IPython magic to ensure Python compatibility.
x = [1, 2, 3]
y = [116216390.4, 320775410.1	 , 2699683010.0]
y = [1.162163904E8, 3.207754101E8, 2.69968301E9]
print(y)
# %matplotlib inline
plt.xlabel("Execuções")
plt.ylabel("Tempos")
plt.plot(x, y)

#plt.plot(y, y2)
plt.show()

# Commented out IPython magic to ensure Python compatibility.
plt.scatter(df.a1000, df.b10000, df.c100000)

plt.show()

# %matplotlib inline
plt.xlabel("N elementos")

plt.ylabel("Times")

#plt.plot(df1.a1000, label='1000')
#plt.plot(df1.b10000, label='10000')
#plt.plot(df1.c100000, label='100000')
#plt.plot(df1)
plt.legend()
plt.show()

